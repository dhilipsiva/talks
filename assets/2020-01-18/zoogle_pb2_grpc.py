# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import zoogle_pb2 as zoogle__pb2


class ZmailStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Mails = channel.unary_stream(
        '/Zmail/Mails',
        request_serializer=zoogle__pb2.Void.SerializeToString,
        response_deserializer=zoogle__pb2.Mail.FromString,
        )
    self.Search = channel.unary_stream(
        '/Zmail/Search',
        request_serializer=zoogle__pb2.Query.SerializeToString,
        response_deserializer=zoogle__pb2.Result.FromString,
        )


class ZmailServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Mails(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Search(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ZmailServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Mails': grpc.unary_stream_rpc_method_handler(
          servicer.Mails,
          request_deserializer=zoogle__pb2.Void.FromString,
          response_serializer=zoogle__pb2.Mail.SerializeToString,
      ),
      'Search': grpc.unary_stream_rpc_method_handler(
          servicer.Search,
          request_deserializer=zoogle__pb2.Query.FromString,
          response_serializer=zoogle__pb2.Result.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Zmail', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class ZdocsStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Docs = channel.unary_stream(
        '/Zdocs/Docs',
        request_serializer=zoogle__pb2.Void.SerializeToString,
        response_deserializer=zoogle__pb2.Doc.FromString,
        )
    self.Search = channel.unary_stream(
        '/Zdocs/Search',
        request_serializer=zoogle__pb2.Query.SerializeToString,
        response_deserializer=zoogle__pb2.Result.FromString,
        )


class ZdocsServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Docs(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Search(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ZdocsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Docs': grpc.unary_stream_rpc_method_handler(
          servicer.Docs,
          request_deserializer=zoogle__pb2.Void.FromString,
          response_serializer=zoogle__pb2.Doc.SerializeToString,
      ),
      'Search': grpc.unary_stream_rpc_method_handler(
          servicer.Search,
          request_deserializer=zoogle__pb2.Query.FromString,
          response_serializer=zoogle__pb2.Result.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Zdocs', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
